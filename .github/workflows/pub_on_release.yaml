name: Publish on Docker Hub and Deploy

on:
  release:
    types: [published]

jobs:
  run_tests:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-python@v1
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Run tests
        run: coverage run app/tests.py
      - name: Tests report
        run: coverage report
  build_and_pub:
    needs: [run_tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get version
        id: get_ver
        run: echo ::set-output name=VERSION::$(echo ${GITHUB_REG:11})
      - name: Login to DokcerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PWD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_LOGIN }}/${{ secrets.DOCKER_NAME }}:${{ steps.get_ver.VERSION }},${{ secrets.DOCKER_LOGIN }}/${{ secrets.DOCKER_NAME }}:latest
#  deploy:
#    needs: [build_and_pub]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set tag to env
#        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:11})
#      - name: Send webhook for deploy
#        run: "curl --silent --show-error --fail -X POST ${{ secrets.DEPLOYMENT_SERVER }} -H 'Authorization: ${{ secrets.DEPLOYMENT_TOKEN }}' -H 'Content-Type: application/json' -d '{\"owner\": \"${{ secrets.DOCKER_LOGIN }}\", \"repository\": \"${{ secrets.DOCKER_NAME }}\", \"tag\": \"${{ env.RELEASE_VERSION }}\", \"ports\": {\"8080\": 8080}}'"
